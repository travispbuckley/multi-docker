version: '3'
services:
  postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_PASSWORD=postgres_password
  redis:
    image: 'redis:latest'
  nginx:
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - '3050:80'
  api:
    build:
      dockerfile: Dockerfile.dev # dont have to give the filepath here, context does that
      context: ./server # use src code inside server dir
    volumes:
      - /app/node_modules # this is a blocker, telling it to not look locally for node_modules, use container
      - ./server:/app # look at ./server whenever something is looking for the /app (WORKDIR from the Dockerfile.dev)
      # our server needs the environment variables referred to in the keys.js file
    environment:
      - REDIS_HOST=redis # the name of our service that has redis on it
      - REDIS_PORT=6379 # the default port exposed from the redis image
      - PGUSER=postgres
      - PGHOST=postgres # the name of the service with our PG instance
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
    depends_on:
      - postgres
  client:
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      - /app/node_modules # 'bookmark', node_modules inside container doesn't get overwriiten with node_modules inside of ./client
      - ./client:/app # share everything in ./client with everything in /app in container
  worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./worker
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - /app/node_modules
      - ./worker:/app